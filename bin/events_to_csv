#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable

-mode(compile).

reducer({TS, {server, {EventKey, Data}}}, Type) ->
    write_record(TS, Type, server, EventKey, Data),
    Type;
reducer({TS, {EventKey, Pid}}, Type) ->
    write_record(TS, Type, Pid, EventKey, Pid),
    Type;
reducer({TS, {'EXIT'=EventKey, Pid, Reason}}, Type) ->
    write_record(TS, Type, Pid, EventKey, {Pid, Reason}),
    Type;
reducer({TS, {EventKey, Pid, Ref}}, Type) ->
    write_record(TS, Type, Pid, EventKey, {Pid, Ref}),
    Type.

main([Type, LogFile]) ->
    code:add_paths([
                    "deps/eleveldb/ebin",
                    "ebin"]),
    write_head(),
    wsdemo_logger:foldl(fun reducer/2, Type, LogFile),
    ok;
main(_) ->
    usage().
                
usage() ->
    io:format("usage: ~n"
     "cat_stats Type::string() LogFile::string()~n",[]).

%% Internal
timestamp({Mega, Secs, Micro}) ->
    Mega*1000*1000*1000*1000 + Secs * 1000 * 1000 + Micro.


write_head() ->
    io:format("timestamp, type, client_id, event_key, event_data~n", []).
 
write_record(TS, Type, Pid, EventKey, EventData) ->
    DataStr = case is_integer(EventData) of
                  false ->
                      io_lib:format("\"~w\"", [EventData]);
                  true ->
                      integer_to_list(EventData)
              end,
    io:format("~w, \"~s\", \"~w\", \"~w\", ~s~n",
              [timestamp(TS), Type, Pid, EventKey, DataStr]).

    
